# Autogenerated by nbdev

d = {
    "settings": {
        "branch": "main",
        "doc_baseurl": "/ScholarlyInfrastructure",
        "doc_host": "https://THU-CVML.github.io",
        "git_url": "https://github.com/THU-CVML/ScholarlyInfrastructure",
        "lib_path": "scholarly_infrastructure",
    },
    "syms": {
        "scholarly_infrastructure.help": {
            "scholarly_infrastructure.help.LibraryPaths": (
                "help (library information).html#librarypaths",
                "scholarly_infrastructure/help.py",
            ),
            "scholarly_infrastructure.help.combine_bilingual_pretty": (
                "help (library information).html#combine_bilingual_pretty",
                "scholarly_infrastructure/help.py",
            ),
            "scholarly_infrastructure.help.create_variables_from_dict": (
                "help (library information).html#create_variables_from_dict",
                "scholarly_infrastructure/help.py",
            ),
            "scholarly_infrastructure.help.setup_paths": (
                "help (library information).html#setup_paths",
                "scholarly_infrastructure/help.py",
            ),
        },
        "scholarly_infrastructure.llm_api": {
            "scholarly_infrastructure.llm_api.Endpoint": (
                "llm_api.html#endpoint",
                "scholarly_infrastructure/llm_api.py",
            ),
            "scholarly_infrastructure.llm_api.Endpoint.__init__": (
                "llm_api.html#endpoint.__init__",
                "scholarly_infrastructure/llm_api.py",
            ),
            "scholarly_infrastructure.llm_api.Endpoint.chat_completions_create": (
                "llm_api.html#endpoint.chat_completions_create",
                "scholarly_infrastructure/llm_api.py",
            ),
            "scholarly_infrastructure.llm_api.Endpoint.chat_completions_create_sync": (
                "llm_api.html#endpoint.chat_completions_create_sync",
                "scholarly_infrastructure/llm_api.py",
            ),
            "scholarly_infrastructure.llm_api.download_file": (
                "llm_api.html#download_file",
                "scholarly_infrastructure/llm_api.py",
            ),
            "scholarly_infrastructure.llm_api.flatten_dict": (
                "llm_api.html#flatten_dict",
                "scholarly_infrastructure/llm_api.py",
            ),
            "scholarly_infrastructure.llm_api.get_env_bool": (
                "llm_api.html#get_env_bool",
                "scholarly_infrastructure/llm_api.py",
            ),
            "scholarly_infrastructure.llm_api.get_pydantic_version": (
                "llm_api.html#get_pydantic_version",
                "scholarly_infrastructure/llm_api.py",
            ),
            "scholarly_infrastructure.llm_api.is_local_file_path": (
                "llm_api.html#is_local_file_path",
                "scholarly_infrastructure/llm_api.py",
            ),
            "scholarly_infrastructure.llm_api.is_url": (
                "llm_api.html#is_url",
                "scholarly_infrastructure/llm_api.py",
            ),
            "scholarly_infrastructure.llm_api.local_video_to_base64_uri": (
                "llm_api.html#local_video_to_base64_uri",
                "scholarly_infrastructure/llm_api.py",
            ),
            "scholarly_infrastructure.llm_api.make_info_df": (
                "llm_api.html#make_info_df",
                "scholarly_infrastructure/llm_api.py",
            ),
            "scholarly_infrastructure.llm_api.separate_think_and_other": (
                "llm_api.html#separate_think_and_other",
                "scholarly_infrastructure/llm_api.py",
            ),
        },
        "scholarly_infrastructure.logging.nucleus": {
            "scholarly_infrastructure.logging.nucleus.print": (
                "logging (richuru).html#print",
                "scholarly_infrastructure/logging/nucleus.py",
            )
        },
        "scholarly_infrastructure.logging.torch": {
            "scholarly_infrastructure.logging.torch.nn.Module.inspect_model_parameters": (
                "torch (inspect torch model).html#nn.module.inspect_model_parameters",
                "scholarly_infrastructure/logging/torch.py",
            ),
            "scholarly_infrastructure.logging.torch.nn.Module.model_rich_tree": (
                "torch (inspect torch model).html#nn.module.model_rich_tree",
                "scholarly_infrastructure/logging/torch.py",
            ),
            "scholarly_infrastructure.logging.torch.nn.Module.num_of_total_parameters": (
                "torch (inspect torch model).html#nn.module.num_of_total_parameters",
                "scholarly_infrastructure/logging/torch.py",
            ),
            "scholarly_infrastructure.logging.torch.nn.Module.num_of_trainable_parameters": (
                "torch "
                "(inspect "
                "torch "
                "model).html#nn.module.num_of_trainable_parameters",
                "scholarly_infrastructure/logging/torch.py",
            ),
            "scholarly_infrastructure.logging.torch.nn.Module.print_model_pretty": (
                "torch (inspect torch model).html#nn.module.print_model_pretty",
                "scholarly_infrastructure/logging/torch.py",
            ),
            "scholarly_infrastructure.logging.torch.nn.Module.print_trainable_parameters": (
                "torch (inspect torch model).html#nn.module.print_trainable_parameters",
                "scholarly_infrastructure/logging/torch.py",
            ),
        },
        "scholarly_infrastructure.nbscholar": {
            "scholarly_infrastructure.nbscholar.guess_notebooks_path": (
                "nbscholar (nbdev extensions).html#guess_notebooks_path",
                "scholarly_infrastructure/nbscholar.py",
            ),
            "scholarly_infrastructure.nbscholar.nbscholar": (
                "nbscholar (nbdev extensions).html#nbscholar",
                "scholarly_infrastructure/nbscholar.py",
            ),
            "scholarly_infrastructure.nbscholar.nbscholar_export": (
                "nbscholar (nbdev extensions).html#nbscholar_export",
                "scholarly_infrastructure/nbscholar.py",
            ),
            "scholarly_infrastructure.nbscholar.nbscholar_separate": (
                "nbscholar (nbdev extensions).html#nbscholar_separate",
                "scholarly_infrastructure/nbscholar.py",
            ),
            "scholarly_infrastructure.nbscholar.nbscholar_submodules": (
                "nbscholar (nbdev extensions).html#nbscholar_submodules",
                "scholarly_infrastructure/nbscholar.py",
            ),
            "scholarly_infrastructure.nbscholar.nbscholar_submodules_to_ssh": (
                "nbscholar (nbdev extensions).html#nbscholar_submodules_to_ssh",
                "scholarly_infrastructure/nbscholar.py",
            ),
            "scholarly_infrastructure.nbscholar.operate_on_notebook_in": (
                "nbscholar (nbdev extensions).html#operate_on_notebook_in",
                "scholarly_infrastructure/nbscholar.py",
            ),
            "scholarly_infrastructure.nbscholar.process_notebooks_in_folder": (
                "nbscholar (nbdev extensions).html#process_notebooks_in_folder",
                "scholarly_infrastructure/nbscholar.py",
            ),
            "scholarly_infrastructure.nbscholar.read_settings_ini": (
                "nbscholar (nbdev extensions).html#read_settings_ini",
                "scholarly_infrastructure/nbscholar.py",
            ),
            "scholarly_infrastructure.nbscholar.split_import_and_code_cells": (
                "nbscholar (nbdev extensions).html#split_import_and_code_cells",
                "scholarly_infrastructure/nbscholar.py",
            ),
        },
        "scholarly_infrastructure.nucleus": {
            "scholarly_infrastructure.nucleus.MuteWarnings": (
                "nucleus (other infras).html#mutewarnings",
                "scholarly_infrastructure/nucleus.py",
            ),
            "scholarly_infrastructure.nucleus.MuteWarnings.__enter__": (
                "nucleus (other infras).html#mutewarnings.__enter__",
                "scholarly_infrastructure/nucleus.py",
            ),
            "scholarly_infrastructure.nucleus.MuteWarnings.__exit__": (
                "nucleus (other infras).html#mutewarnings.__exit__",
                "scholarly_infrastructure/nucleus.py",
            ),
            "scholarly_infrastructure.nucleus.MuteWarnings.mute": (
                "nucleus (other infras).html#mutewarnings.mute",
                "scholarly_infrastructure/nucleus.py",
            ),
            "scholarly_infrastructure.nucleus.MuteWarnings.resume": (
                "nucleus (other infras).html#mutewarnings.resume",
                "scholarly_infrastructure/nucleus.py",
            ),
            "scholarly_infrastructure.nucleus.append_dict_list": (
                "nucleus (other infras).html#append_dict_list",
                "scholarly_infrastructure/nucleus.py",
            ),
            "scholarly_infrastructure.nucleus.default_on_exception": (
                "nucleus (other infras).html#default_on_exception",
                "scholarly_infrastructure/nucleus.py",
            ),
            "scholarly_infrastructure.nucleus.ensure_array": (
                "nucleus (other infras).html#ensure_array",
                "scholarly_infrastructure/nucleus.py",
            ),
            "scholarly_infrastructure.nucleus.partial_with_self": (
                "nucleus (other infras).html#partial_with_self",
                "scholarly_infrastructure/nucleus.py",
            ),
        },
        "scholarly_infrastructure.rv_args.fun_star": {
            "scholarly_infrastructure.rv_args.fun_star.foo": (
                "fun_star (f*(x) decorators for functional hpo interface).html#foo",
                "scholarly_infrastructure/rv_args/fun_star.py",
            )
        },
        "scholarly_infrastructure.rv_args.nucleus": {
            "scholarly_infrastructure.rv_args.nucleus.ExperimentModule": (
                "rv_args (arguments are random variables).html#experimentmodule",
                "scholarly_infrastructure/rv_args/nucleus.py",
            ),
            "scholarly_infrastructure.rv_args.nucleus.ExperimentModule.__init_subclass__": (
                "rv_args "
                "(arguments "
                "are "
                "random "
                "variables).html#experimentmodule.__init_subclass__",
                "scholarly_infrastructure/rv_args/nucleus.py",
            ),
            "scholarly_infrastructure.rv_args.nucleus.ExperimentModule.__post_init__": (
                "rv_args "
                "(arguments "
                "are "
                "random "
                "variables).html#experimentmodule.__post_init__",
                "scholarly_infrastructure/rv_args/nucleus.py",
            ),
            "scholarly_infrastructure.rv_args.nucleus.ExperimentModule.__pre_init__": (
                "rv_args "
                "(arguments "
                "are "
                "random "
                "variables).html#experimentmodule.__pre_init__",
                "scholarly_infrastructure/rv_args/nucleus.py",
            ),
            "scholarly_infrastructure.rv_args.nucleus.ExperimentModule.__repr__": (
                "rv_args "
                "(arguments "
                "are "
                "random "
                "variables).html#experimentmodule.__repr__",
                "scholarly_infrastructure/rv_args/nucleus.py",
            ),
            "scholarly_infrastructure.rv_args.nucleus.ExperimentModule.extra_repr": (
                "rv_args "
                "(arguments "
                "are "
                "random "
                "variables).html#experimentmodule.extra_repr",
                "scholarly_infrastructure/rv_args/nucleus.py",
            ),
            "scholarly_infrastructure.rv_args.nucleus.ExperimentModule.setup": (
                "rv_args (arguments are random variables).html#experimentmodule.setup",
                "scholarly_infrastructure/rv_args/nucleus.py",
            ),
            "scholarly_infrastructure.rv_args.nucleus.PythonField": (
                "rv_args (arguments are random variables).html#pythonfield",
                "scholarly_infrastructure/rv_args/nucleus.py",
            ),
            "scholarly_infrastructure.rv_args.nucleus.PythonField.__call__": (
                "rv_args (arguments are random variables).html#pythonfield.__call__",
                "scholarly_infrastructure/rv_args/nucleus.py",
            ),
            "scholarly_infrastructure.rv_args.nucleus.PythonField.__invert__": (
                "rv_args (arguments are random variables).html#pythonfield.__invert__",
                "scholarly_infrastructure/rv_args/nucleus.py",
            ),
            "scholarly_infrastructure.rv_args.nucleus.PythonField.__post_init__": (
                "rv_args "
                "(arguments "
                "are "
                "random "
                "variables).html#pythonfield.__post_init__",
                "scholarly_infrastructure/rv_args/nucleus.py",
            ),
            "scholarly_infrastructure.rv_args.nucleus.RandomVariable": (
                "rv_args (arguments are random variables).html#randomvariable",
                "scholarly_infrastructure/rv_args/nucleus.py",
            ),
            "scholarly_infrastructure.rv_args.nucleus.RandomVariable.__call__": (
                "rv_args (arguments are random variables).html#randomvariable.__call__",
                "scholarly_infrastructure/rv_args/nucleus.py",
            ),
            "scholarly_infrastructure.rv_args.nucleus.RandomVariable.__invert__": (
                "rv_args "
                "(arguments "
                "are "
                "random "
                "variables).html#randomvariable.__invert__",
                "scholarly_infrastructure/rv_args/nucleus.py",
            ),
            "scholarly_infrastructure.rv_args.nucleus.argparse_parser_add_arguments": (
                "rv_args "
                "(arguments "
                "are "
                "random "
                "variables).html#argparse_parser_add_arguments",
                "scholarly_infrastructure/rv_args/nucleus.py",
            ),
            "scholarly_infrastructure.rv_args.nucleus.dataclass_for_torch_decorator": (
                "rv_args "
                "(arguments "
                "are "
                "random "
                "variables).html#dataclass_for_torch_decorator",
                "scholarly_infrastructure/rv_args/nucleus.py",
            ),
            "scholarly_infrastructure.rv_args.nucleus.experiment_setting_decorator": (
                "rv_args "
                "(arguments "
                "are "
                "random "
                "variables).html#experiment_setting_decorator",
                "scholarly_infrastructure/rv_args/nucleus.py",
            ),
            "scholarly_infrastructure.rv_args.nucleus.get_optuna_search_space": (
                "rv_args (arguments are random variables).html#get_optuna_search_space",
                "scholarly_infrastructure/rv_args/nucleus.py",
            ),
            "scholarly_infrastructure.rv_args.nucleus.is_experiment_setting": (
                "rv_args (arguments are random variables).html#is_experiment_setting",
                "scholarly_infrastructure/rv_args/nucleus.py",
            ),
            "scholarly_infrastructure.rv_args.nucleus.optuna_suggest": (
                "rv_args (arguments are random variables).html#optuna_suggest",
                "scholarly_infrastructure/rv_args/nucleus.py",
            ),
            "scholarly_infrastructure.rv_args.nucleus.pre_init_decorator": (
                "rv_args (arguments are random variables).html#pre_init_decorator",
                "scholarly_infrastructure/rv_args/nucleus.py",
            ),
            "scholarly_infrastructure.rv_args.nucleus.show_dataframe_doc": (
                "rv_args (arguments are random variables).html#show_dataframe_doc",
                "scholarly_infrastructure/rv_args/nucleus.py",
            ),
        },
    },
}
